#!/usr/bin/env python3
"""
DEBUG PROGRAMA√á√ïES CRIADAS
==========================

Verificar por que as programa√ß√µes criadas n√£o t√™m id_ordem_servico.
"""

import sqlite3

def debug_programacoes():
    """Debug das programa√ß√µes criadas"""
    print("üîç Debugando programa√ß√µes criadas...")
    
    db_path = "C:/Users/Alessandro/OneDrive/Desktop/RegistroOS/RegistroOS/registrooficial/backend/registroos_new.db"
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # Verificar programa√ß√µes do usu√°rio ID 8
        cursor.execute("""
            SELECT id, id_ordem_servico, responsavel_id, status, observacoes, created_at
            FROM programacoes 
            WHERE responsavel_id = 8
            ORDER BY id DESC
        """)
        programacoes = cursor.fetchall()
        
        print(f"üìã Programa√ß√µes do usu√°rio ID 8:")
        for prog in programacoes:
            print(f"   ID {prog[0]}: OS={prog[1]}, Respons√°vel={prog[2]}, Status={prog[3]}")
            print(f"      Observa√ß√µes: {prog[4][:50]}...")
            print(f"      Criado em: {prog[5]}")
            print()
        
        # Verificar todas as programa√ß√µes recentes
        cursor.execute("""
            SELECT id, id_ordem_servico, responsavel_id, status, observacoes, created_at
            FROM programacoes 
            ORDER BY id DESC
            LIMIT 10
        """)
        todas_programacoes = cursor.fetchall()
        
        print(f"üìã √öltimas 10 programa√ß√µes criadas:")
        for prog in todas_programacoes:
            print(f"   ID {prog[0]}: OS={prog[1]}, Respons√°vel={prog[2]}, Status={prog[3]}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå Erro: {e}")

def main():
    """Fun√ß√£o principal"""
    print("üîß DEBUG PROGRAMA√á√ïES CRIADAS")
    print("=" * 35)
    
    debug_programacoes()

if __name__ == "__main__":
    main()

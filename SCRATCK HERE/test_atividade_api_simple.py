#!/usr/bin/env python3
"""
Teste simples para verificar se a API de tipos de atividade est√° retornando o campo nome
"""

import requests
import json

def test_atividade_api():
    """Testar API de tipos de atividade"""
    
    print("üîß [DEBUG] Testando API de tipos de atividade...")
    
    try:
        # Fazer requisi√ß√£o para a API
        url = "http://localhost:8000/api/admin/tipos-atividade"
        
        print(f"üì° [REQUEST] GET {url}")
        response = requests.get(url)
        
        print(f"‚úÖ [RESPONSE] Status: {response.status_code}")
        
        if response.status_code == 200:
            atividades = response.json()
            print(f"‚úÖ [SUCCESS] Retornou {len(atividades)} tipos de atividade")
            
            if len(atividades) > 0:
                print(f"\nüìã [DADOS] Primeira atividade:")
                primeira = atividades[0]
                print(json.dumps(primeira, indent=2, ensure_ascii=False))
                
                # Verificar campos essenciais
                campos_essenciais = ['id', 'nome', 'nome_tipo', 'descricao', 'departamento', 'setor', 'categoria', 'ativo']
                print(f"\nüîç [VERIFICA√á√ÉO] Campos essenciais:")
                for campo in campos_essenciais:
                    valor = primeira.get(campo)
                    if valor is not None and valor != '':
                        print(f"   ‚úÖ {campo}: '{valor}'")
                    else:
                        print(f"   ‚ùå {campo}: VAZIO ou None")
                        
                # Verificar se todas as atividades t√™m nome
                sem_nome = [a for a in atividades if not a.get('nome')]
                if len(sem_nome) > 0:
                    print(f"\n‚ùå [PROBLEMA] {len(sem_nome)} atividades sem campo 'nome'")
                else:
                    print(f"\n‚úÖ [SUCESSO] Todas as atividades t√™m campo 'nome'")
                    
            else:
                print("‚ö†Ô∏è [AVISO] Nenhuma atividade retornada")
                
        elif response.status_code == 401:
            print("‚ùå [ERROR] 401 - N√£o autorizado. Servidor pode estar exigindo autentica√ß√£o.")
        elif response.status_code == 404:
            print("‚ùå [ERROR] 404 - Endpoint n√£o encontrado. Verifique se o servidor est√° rodando.")
        else:
            print(f"‚ùå [ERROR] Status {response.status_code}: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå [ERROR] N√£o foi poss√≠vel conectar ao servidor. Verifique se est√° rodando em http://localhost:8000")
    except Exception as e:
        print(f"‚ùå [ERROR] Erro inesperado: {e}")

    print("\n‚úÖ [DEBUG] Teste da API conclu√≠do!")

if __name__ == "__main__":
    test_atividade_api()
